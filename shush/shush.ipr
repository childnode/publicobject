<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AntConfiguration">
    <defaultAnt bundledAnt="true" />
    <buildFile url="file://$PROJECT_DIR$/build.xml">
      <additionalClassPath />
      <antReference projectDefault="true" />
      <customJdkName value="" />
      <maximumHeapSize value="128" />
      <maximumStackSize value="2" />
      <properties />
    </buildFile>
  </component>
  <component name="BuildJarProjectSettings">
    <option name="BUILD_JARS_ON_MAKE" value="false" />
  </component>
  <component name="CodeStyleSettingsManager">
    <option name="PER_PROJECT_SETTINGS">
      <value>
        <ADDITIONAL_INDENT_OPTIONS fileType="java">
          <option name="INDENT_SIZE" value="4" />
          <option name="CONTINUATION_INDENT_SIZE" value="8" />
          <option name="TAB_SIZE" value="4" />
          <option name="USE_TAB_CHARACTER" value="false" />
          <option name="SMART_TABS" value="false" />
          <option name="LABEL_INDENT_SIZE" value="0" />
          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
          <option name="USE_RELATIVE_INDENTS" value="false" />
        </ADDITIONAL_INDENT_OPTIONS>
        <ADDITIONAL_INDENT_OPTIONS fileType="jsp">
          <option name="INDENT_SIZE" value="4" />
          <option name="CONTINUATION_INDENT_SIZE" value="8" />
          <option name="TAB_SIZE" value="4" />
          <option name="USE_TAB_CHARACTER" value="false" />
          <option name="SMART_TABS" value="false" />
          <option name="LABEL_INDENT_SIZE" value="0" />
          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
          <option name="USE_RELATIVE_INDENTS" value="false" />
        </ADDITIONAL_INDENT_OPTIONS>
        <ADDITIONAL_INDENT_OPTIONS fileType="xml">
          <option name="INDENT_SIZE" value="4" />
          <option name="CONTINUATION_INDENT_SIZE" value="8" />
          <option name="TAB_SIZE" value="4" />
          <option name="USE_TAB_CHARACTER" value="false" />
          <option name="SMART_TABS" value="false" />
          <option name="LABEL_INDENT_SIZE" value="0" />
          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
          <option name="USE_RELATIVE_INDENTS" value="false" />
        </ADDITIONAL_INDENT_OPTIONS>
      </value>
    </option>
  </component>
  <component name="CompilerConfiguration">
    <option name="DEFAULT_COMPILER" value="Javac" />
    <resourceExtensions>
      <entry name=".+\.(properties|xml|html|dtd|tld)" />
      <entry name=".+\.(gif|png|jpeg|jpg)" />
    </resourceExtensions>
    <wildcardResourcePatterns>
      <entry name="?*.properties" />
      <entry name="?*.xml" />
      <entry name="?*.gif" />
      <entry name="?*.png" />
      <entry name="?*.jpeg" />
      <entry name="?*.jpg" />
      <entry name="?*.html" />
      <entry name="?*.dtd" />
      <entry name="?*.tld" />
      <entry name="?*.ftl" />
    </wildcardResourcePatterns>
    <annotationProcessing enabled="false" useClasspath="true" />
  </component>
  <component name="CopyrightManager" default="">
    <module2copyright />
  </component>
  <component name="DependencyValidationManager">
    <option name="SKIP_IMPORT_STATEMENTS" value="false" />
  </component>
  <component name="EclipseCompilerSettings">
    <option name="GENERATE_NO_WARNINGS" value="true" />
    <option name="DEPRECATION" value="false" />
  </component>
  <component name="Encoding" useUTFGuessing="true" native2AsciiForPropertiesFiles="false" />
  <component name="EntryPointsManager">
    <entry_points version="2.0" />
  </component>
  <component name="InspectionProjectProfileManager">
    <profiles>
      <profile version="1.0" is_locked="false">
        <option name="myName" value="Project Default" />
        <option name="myLocal" value="false" />
        <inspection_tool class="AssertEqualsBetweenInconvertibleTypes" enabled="false" level="WARNING" enabled_by_default="false" />
        <inspection_tool class="EmptyCatchBlock" enabled="false" level="WARNING" enabled_by_default="false">
          <option name="m_includeComments" value="true" />
          <option name="m_ignoreTestCases" value="true" />
          <option name="m_ignoreIgnoreParameter" value="true" />
        </inspection_tool>
        <inspection_tool class="JavaDoc" enabled="false" level="WARNING" enabled_by_default="false">
          <option name="TOP_LEVEL_CLASS_OPTIONS">
            <value>
              <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
              <option name="REQUIRED_TAGS" value="" />
            </value>
          </option>
          <option name="INNER_CLASS_OPTIONS">
            <value>
              <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
              <option name="REQUIRED_TAGS" value="" />
            </value>
          </option>
          <option name="METHOD_OPTIONS">
            <value>
              <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
              <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
            </value>
          </option>
          <option name="FIELD_OPTIONS">
            <value>
              <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
              <option name="REQUIRED_TAGS" value="" />
            </value>
          </option>
          <option name="IGNORE_DEPRECATED" value="false" />
          <option name="IGNORE_JAVADOC_PERIOD" value="true" />
          <option name="IGNORE_DUPLICATED_THROWS" value="false" />
          <option name="IGNORE_POINT_TO_ITSELF" value="false" />
          <option name="myAdditionalJavadocTags" value="" />
        </inspection_tool>
        <inspection_tool class="SSBasedInspection" enabled="false" level="WARNING" enabled_by_default="false">
          <replaceConfiguration name="use Lists.newArrayList" text="java.util.List&lt;$T$&gt; $var$ = new java.util.ArrayList&lt;$T$&gt;();" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.List&lt;$T$&gt; $var$ = com.google.common.collect.Lists.newArrayList();">
            <constraint name="var" within="" contains="" />
            <constraint name="T" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Lists.newArrayList (iterable)" text="java.util.List&lt;$T$&gt; $var$ = new java.util.ArrayList&lt;$T$&gt;($iterable$);" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.List&lt;$T$&gt; $var$ = com.google.common.collect.Lists.newArrayList($iterable$);">
            <constraint name="var" within="" contains="" />
            <constraint name="T" within="" contains="" />
            <constraint name="iterable" nameOfExprType="java.lang.Iterable" exprTypeWithinHierarchy="true" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Lists.newLinkedList" text="java.util.List&lt;$T$&gt; $var$ = new java.util.LinkedList&lt;$T$&gt;();" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.List&lt;$T$&gt; $var$ = com.google.common.collect.Lists.newLinkedList();">
            <constraint name="var" within="" contains="" />
            <constraint name="T" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Lists.newLinkedList (iterable)" text="java.util.List&lt;$T$&gt; $var$ = new java.util.LinkedList&lt;$T$&gt;($iterable$);" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.List&lt;$T$&gt; $var$ = com.google.common.collect.Lists.newLinkedList($iterable$);">
            <constraint name="var" within="" contains="" />
            <constraint name="iterable" nameOfExprType="java.lang.Iterable" exprTypeWithinHierarchy="true" within="" contains="" />
            <constraint name="T" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Sets.newHashSet" text="java.util.Set&lt;$T$&gt; $var$ = new java.util.HashSet&lt;$T$&gt;();" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.Set&lt;$T$&gt; $var$ = com.google.common.collect.Sets.newHashSet();">
            <constraint name="var" within="" contains="" />
            <constraint name="T" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Sets.newHashSet (iterable)" text="java.util.Set&lt;$T$&gt; $var$ = new HashSet&lt;$T$&gt;($iterable$);" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.Set&lt;$T$&gt; $var$ = com.google.common.collect.Sets.newHashSet($iterable$);">
            <constraint name="var" within="" contains="" />
            <constraint name="T" within="" contains="" />
            <constraint name="iterable" nameOfExprType="java.lang.Iterable" exprTypeWithinHierarchy="true" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Maps.newHashMap" text="java.util.Map&lt;$K$, $V$&gt; $var$ = new java.util.HashMap&lt;$K$, $V$&gt;();" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="java.util.Map&lt;$K$, $V$&gt; $var$ = com.google.common.collect.Maps.newHashMap();">
            <constraint name="var" within="" contains="" />
            <constraint name="K" within="" contains="" />
            <constraint name="V" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Multimap&lt;K, V&gt; instead of Map&lt;K, List&lt;V&gt;&gt;" text="java.util.Map&lt;$K$, java.util.List&lt;$V$&gt;&gt; $var$ = $expr$;" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Multimap&lt;$K$, $V$&gt; $var$ = $expr$;">
            <constraint name="K" within="" contains="" />
            <constraint name="V" within="" contains="" />
            <constraint name="var" within="" contains="" />
            <constraint name="expr" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Multimap&lt;K, V&gt; instead of Map&lt;K, Set&lt;V&gt;&gt;" text="java.util.Map&lt;$K$, java.util.Set&lt;$V$&gt;&gt; $var$ = $expr$;" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Multimap&lt;$K$, $V$&gt; $var$ = $expr$;">
            <constraint name="K" within="" contains="" />
            <constraint name="V" within="" contains="" />
            <constraint name="var" within="" contains="" />
            <constraint name="expr" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Preconditions.checkState" text="if ($condition$) {&#10;  throw new IllegalStateException($message$);&#10;}" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.base.Preconditions.checkState(!($condition$), $message$);">
            <constraint name="condition" within="" contains="" />
            <constraint name="message" nameOfExprType="java.lang.String" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Preconditions.checkArgument" text="if ($argumentCondition$) {&#10;  throw new IllegalArgumentException($message$);&#10;}" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.base.Preconditions.checkArgument(!($argumentCondition$), $message$);">
            <constraint name="message" nameOfExprType="java.lang.String" within="" contains="" />
            <constraint name="argumentCondition" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Preconditions.checkNotNull" text="if ($var$ == null) {&#10;  throw new NullPointerException($message$);&#10;}" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.base.Preconditions.checkNotNull($var$, $message$);">
            <constraint name="var" within="" contains="" />
            <constraint name="message" nameOfExprType="java.lang.String" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.max" text="$a$.compareTo($b$) &gt; 0 ? $a$ : $b$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.max($b$, $a$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.max for &gt;=" text="$a$.compareTo($b$) &gt;= 0 ? $a$ : $b$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.max($a$, $b$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.min" text="$a$.compareTo($b$) &lt; 0 ? $a$ : $b$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.min($b$, $a$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.min for &lt;=" text="$a$.compareTo($b$) &lt;= 0 ? $a$ : $b$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.min($a$, $b$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.min (2)" text="$a$.compareTo($b$) &gt; 0 ? $b$ : $a$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.min($a$, $b$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.min (2, &gt;=)" text="$a$.compareTo($b$) &gt;= 0 ? $b$ : $a$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.min($b$, $a$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.max (2)" text="$a$.compareTo($b$) &lt; 0 ? $b$ : $a$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.max($a$, $b$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Comparators.max (2, &lt;=)" text="$a$.compareTo($b$) &lt;= 0 ? $b$ : $a$" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.collect.Comparators.max($b$, $a$)">
            <constraint name="a" within="" contains="" />
            <constraint name="b" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Preconditions.checkState()" text="if ($condition$) {&#10;  throw new IllegalStateException();&#10;}" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.base.Preconditions.checkState(!($condition$));">
            <constraint name="condition" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Preconditions.checkArgument()" text="if ($condition$) {&#10;  throw new IllegalArgumentException();&#10;}" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.base.Preconditions.checkArgument(!($condition$));">
            <constraint name="condition" within="" contains="" />
          </replaceConfiguration>
          <replaceConfiguration name="use Preconditions.checkNotNull()" text="if ($var$ == null) {&#10;  throw new NullPointerException();&#10;}" recursive="false" caseInsensitive="true" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.google.common.base.Preconditions.checkNotNull($var$);">
            <constraint name="reference" within="" contains="" />
            <constraint name="var" within="" contains="" />
          </replaceConfiguration>
        </inspection_tool>
        <inspection_tool class="ThrowableInstanceNeverThrown" enabled="false" level="WARNING" enabled_by_default="false" />
      </profile>
    </profiles>
    <option name="PROJECT_PROFILE" value="Project Default" />
    <option name="USE_PROJECT_PROFILE" value="true" />
    <version value="1.0" />
  </component>
  <component name="JavadocGenerationManager">
    <option name="OUTPUT_DIRECTORY" />
    <option name="OPTION_SCOPE" value="protected" />
    <option name="OPTION_HIERARCHY" value="true" />
    <option name="OPTION_NAVIGATOR" value="true" />
    <option name="OPTION_INDEX" value="true" />
    <option name="OPTION_SEPARATE_INDEX" value="true" />
    <option name="OPTION_DOCUMENT_TAG_USE" value="false" />
    <option name="OPTION_DOCUMENT_TAG_AUTHOR" value="false" />
    <option name="OPTION_DOCUMENT_TAG_VERSION" value="false" />
    <option name="OPTION_DOCUMENT_TAG_DEPRECATED" value="true" />
    <option name="OPTION_DEPRECATED_LIST" value="true" />
    <option name="OTHER_OPTIONS" value="" />
    <option name="HEAP_SIZE" />
    <option name="LOCALE" />
    <option name="OPEN_IN_BROWSER" value="true" />
  </component>
  <component name="Palette2">
    <group name="Swing">
      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
      </item>
      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
      </item>
      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
      </item>
      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
      </item>
      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
        <initial-values>
          <property name="text" value="Button" />
        </initial-values>
      </item>
      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
        <initial-values>
          <property name="text" value="RadioButton" />
        </initial-values>
      </item>
      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
        <initial-values>
          <property name="text" value="CheckBox" />
        </initial-values>
      </item>
      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
        <initial-values>
          <property name="text" value="Label" />
        </initial-values>
      </item>
      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
          <preferred-size width="150" height="-1" />
        </default-constraints>
      </item>
      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
          <preferred-size width="150" height="-1" />
        </default-constraints>
      </item>
      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
          <preferred-size width="150" height="-1" />
        </default-constraints>
      </item>
      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
          <preferred-size width="150" height="50" />
        </default-constraints>
      </item>
      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
          <preferred-size width="150" height="50" />
        </default-constraints>
      </item>
      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
          <preferred-size width="150" height="50" />
        </default-constraints>
      </item>
      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
      </item>
      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
          <preferred-size width="150" height="50" />
        </default-constraints>
      </item>
      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
          <preferred-size width="150" height="50" />
        </default-constraints>
      </item>
      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
          <preferred-size width="150" height="50" />
        </default-constraints>
      </item>
      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
          <preferred-size width="200" height="200" />
        </default-constraints>
      </item>
      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
          <preferred-size width="200" height="200" />
        </default-constraints>
      </item>
      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
      </item>
      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
      </item>
      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
      </item>
      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
      </item>
      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
          <preferred-size width="-1" height="20" />
        </default-constraints>
      </item>
      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
      </item>
      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
      </item>
    </group>
  </component>
  <component name="ProjectDetails">
    <option name="projectName" value="shush" />
  </component>
  <component name="ProjectKey">
    <option name="state" value="project:///Users/jessewilson/shush/shush.ipr" />
  </component>
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/Shush.iml" filepath="$PROJECT_DIR$/Shush.iml" />
      <module fileurl="file://$PROJECT_DIR$/tests/Tests.iml" filepath="$PROJECT_DIR$/tests/Tests.iml" />
    </modules>
  </component>
  <component name="ProjectResources">
    <default-html-doctype>http://www.w3.org/1999/xhtml</default-html-doctype>
  </component>
  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_5" assert-keyword="true" jdk-15="true" project-jdk-name="1.6" project-jdk-type="JavaSDK">
    <output url="file://$PROJECT_DIR$/out" />
  </component>
  <component name="ResourceManagerContainer">
    <option name="myResourceBundles">
      <value>
        <list size="0" />
      </value>
    </option>
  </component>
  <component name="SvnBranchConfigurationManager">
    <option name="myConfigurationMap">
      <map>
        <entry key="$PROJECT_DIR$">
          <value>
            <SvnBranchConfiguration>
              <option name="trunkUrl" value="https://publicobject.googlecode.com/svn/shush" />
            </SvnBranchConfiguration>
          </value>
        </entry>
      </map>
    </option>
    <option name="myVersion" value="124" />
    <option name="mySupportsUserInfoFilter" value="true" />
  </component>
  <component name="VcsDirectoryMappings">
    <mapping directory="" vcs="svn" />
  </component>
</project>

